desc "Install vim configuration files"
task :install do
  begin
  vim_configuration
  rescue Interrupt
  ensure exiting
  end
end

task :restore do
  puts "restoring the backup"
  #TODO arguments or choices to restore
end

task :default => :install

def vim_configuration
  vim  = "vim"
  time = Time.now.strftime "%Y-%m-%d-%H:%M"

  puts ""
  puts "  This script is going to put vim configuration files in to your home folder."
  puts ""
  puts "  Your home folder seems to be at #{home}"
  puts ""
  puts "  If files or folders with the same name already exist, backup is going to be created at"
  puts "  #{home}/.dev-config/#{vim}/#{time}-backup"
  puts "  If this is ok, confirm with 'yes'."
  puts "  If you prefer any different installation path, confirm with 'no'."
  puts "  For exiting confirm with 'exit'."
  puts ""
  print "  Your answer is: "

  input = case gets.strip
  when "yes" then default_installation
  when "no" then alternate_installation
  when "exit" then exiting ; exit 0
  end
end

FILES = ['vimrc', 'vim']

def files
  path = File.join pwd, 'files'
  FILES.map {|file| File.join path, file }
end

def pwd
  Dir.pwd
end

def home
  require 'etc'
  Etc.getpwuid.dir
end

def default_installation
  installation_path = '/home/vlad/test/home'
  files.each do |file|
    FileUtils.cp_r file, installation_path
  end
end

def alternate_installation 
  print "  Enter the prefered path for vim config files (or Ctrl+C to exit): "
  input = gets
end

def exiting
  puts "  Exiting.."
end
